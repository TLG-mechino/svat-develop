# Generated by Django 3.2.2 on 2021-05-13 05:31

import ckeditor_uploader.fields
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('email', models.CharField(max_length=100, unique=True)),
                ('name', models.TextField()),
                ('dob', models.DateTimeField(null=True)),
                ('gender', models.IntegerField(null=True)),
                ('address', models.TextField(null=True)),
                ('phone_number', models.TextField(null=True)),
                ('note', models.TextField(null=True)),
                ('role', models.IntegerField(default=1)),
            ],
            options={
                'db_table': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('post_at', models.DateTimeField()),
                ('view', models.IntegerField()),
            ],
            options={
                'db_table': 'article',
            },
        ),
        migrations.CreateModel(
            name='ArticleCategory',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name_en', models.TextField()),
                ('name_vi', models.TextField()),
            ],
            options={
                'db_table': 'article_category',
            },
        ),
        migrations.CreateModel(
            name='ImportOrder',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created', models.DateTimeField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'import_order',
            },
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=100, null=True)),
            ],
            options={
                'db_table': 'language',
            },
        ),
        migrations.CreateModel(
            name='Media',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('file_path', models.TextField()),
            ],
            options={
                'db_table': 'media',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('address', models.CharField(max_length=256)),
                ('email', models.CharField(max_length=256)),
                ('phone_number', models.CharField(max_length=256)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'order',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('cost', models.DecimalField(decimal_places=2, max_digits=20)),
                ('quantity', models.IntegerField()),
                ('view', models.IntegerField()),
                ('des', models.TextField()),
            ],
            options={
                'db_table': 'product',
            },
        ),
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name_en', models.TextField()),
                ('name_vi', models.TextField()),
            ],
            options={
                'db_table': 'product_category',
            },
        ),
        migrations.CreateModel(
            name='ProductLanguage',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=512)),
                ('des', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True)),
                ('language', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='my_admin.language')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='my_admin.product')),
            ],
            options={
                'db_table': 'product_language',
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('media', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='my_admin.media')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='my_admin.product')),
            ],
            options={
                'db_table': 'product_image',
            },
        ),
        migrations.AddField(
            model_name='product',
            name='product_category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='my_admin.productcategory'),
        ),
        migrations.CreateModel(
            name='OrderProduct',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('quantity', models.IntegerField()),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='my_admin.order')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='my_admin.product')),
            ],
            options={
                'db_table': 'order_product',
            },
        ),
        migrations.CreateModel(
            name='ImportOrderProduct',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('quantity', models.IntegerField()),
                ('import_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='my_admin.importorder')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='my_admin.product')),
            ],
            options={
                'db_table': 'import_order_product',
            },
        ),
        migrations.CreateModel(
            name='ArticleLanguage',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.TextField()),
                ('content', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True)),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='my_admin.article')),
                ('language', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='my_admin.language')),
            ],
            options={
                'db_table': 'article_language',
            },
        ),
        migrations.AddField(
            model_name='article',
            name='article_category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='my_admin.articlecategory'),
        ),
        migrations.AddField(
            model_name='article',
            name='thumbnail',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='my_admin.media'),
        ),
        migrations.AddField(
            model_name='user',
            name='avatar',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='my_admin.media'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
